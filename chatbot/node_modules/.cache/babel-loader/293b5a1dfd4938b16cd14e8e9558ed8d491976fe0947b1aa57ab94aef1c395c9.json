{"ast":null,"code":"var _jsxFileName = \"/Users/christophergenberg/Desktop/1753 BOT/chatbot/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { Box, IconButton, Paper, TextField, Typography } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport styled from 'styled-components';\nimport OpenAI from 'openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#4A4A4A'\n    },\n    secondary: {\n      main: '#9E9E9E'\n    }\n  }\n});\nconst ChatContainer = styled(Paper)`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 350px;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n  border-radius: 12px;\n  overflow: hidden;\n  transition: all 0.3s ease;\n  transform: ${props => props.isOpen ? 'translateY(0)' : 'translateY(calc(100% - 60px))'};\n`;\n_c = ChatContainer;\nconst ChatHeader = styled(Box)`\n  background-color: #4A4A4A;\n  color: white;\n  padding: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n_c2 = ChatHeader;\nconst ChatMessages = styled(Box)`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  background-color: #f5f5f5;\n`;\n_c3 = ChatMessages;\nconst MessageBubble = styled(Box)`\n  max-width: 80%;\n  margin: 8px 0;\n  padding: 12px;\n  border-radius: 12px;\n  ${props => props.isUser ? `\n    background-color: #4A4A4A;\n    color: white;\n    margin-left: auto;\n  ` : `\n    background-color: white;\n    color: #4A4A4A;\n    margin-right: auto;\n  `}\n`;\n_c4 = MessageBubble;\nconst ChatInput = styled(Box)`\n  padding: 16px;\n  background-color: white;\n  border-top: 1px solid #e0e0e0;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c5 = ChatInput;\nconst ChatButton = styled(IconButton)`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background-color: #4A4A4A !important;\n  color: white !important;\n  &:hover {\n    background-color: #333333 !important;\n  }\n`;\n_c6 = ChatButton;\nconst openai = new OpenAI({\n  apiKey: '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',\n  dangerouslyAllowBrowser: true\n});\nfunction App() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    text: \"Hej! Jag är 1753 Skincare's AI-assistent. Jag kan hjälpa dig med frågor om hudvård och hudhälsa. Hur kan jag hjälpa dig idag?\",\n    isUser: false\n  }]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      isUser: true\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    try {\n      const response = await openai.chat.completions.create({\n        model: \"gpt-4\",\n        messages: [{\n          role: \"system\",\n          content: \"Du är en expert på hudvård och hudhälsa med fokus på holistisk hälsa. Du ska endast svara på frågor relaterade till hudvård, hudhälsa och relaterade ämnen. För alla andra frågor, hänvisa till christopher@1753skincare.com\"\n        }, {\n          role: \"user\",\n          content: input\n        }],\n        temperature: 0.7,\n        max_tokens: 500\n      });\n      const botMessage = {\n        text: response.choices[0].message.content,\n        isUser: false\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        text: \"Tyvärr kunde jag inte processa din fråga just nu. Vänligen försök igen eller kontakta christopher@1753skincare.com\",\n        isUser: false\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(ChatButton, {\n      onClick: () => setIsOpen(!isOpen),\n      children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n      isOpen: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"1753 Skincare Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setIsOpen(false),\n          sx: {\n            color: 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatMessages, {\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          isUser: message.isUser,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Skriv ditt meddelande...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleSend(),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          onClick: handleSend,\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q4VSBE3gjx/6uXUPT4IroNmLKXQ=\");\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"ChatHeader\");\n$RefreshReg$(_c3, \"ChatMessages\");\n$RefreshReg$(_c4, \"MessageBubble\");\n$RefreshReg$(_c5, \"ChatInput\");\n$RefreshReg$(_c6, \"ChatButton\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ThemeProvider","createTheme","Box","IconButton","Paper","TextField","Typography","SendIcon","ChatIcon","styled","OpenAI","jsxDEV","_jsxDEV","theme","palette","primary","main","secondary","ChatContainer","props","isOpen","_c","ChatHeader","_c2","ChatMessages","_c3","MessageBubble","isUser","_c4","ChatInput","_c5","ChatButton","_c6","openai","apiKey","dangerouslyAllowBrowser","App","_s","setIsOpen","messages","setMessages","text","input","setInput","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","prev","response","chat","completions","create","model","role","content","temperature","max_tokens","botMessage","choices","message","error","console","errorMessage","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","color","map","index","ref","fullWidth","placeholder","value","onChange","e","target","onKeyPress","key","size","_c7","$RefreshReg$"],"sources":["/Users/christophergenberg/Desktop/1753 BOT/chatbot/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { Box, IconButton, Paper, TextField, Typography } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport styled from 'styled-components';\nimport OpenAI from 'openai';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#4A4A4A',\n    },\n    secondary: {\n      main: '#9E9E9E',\n    },\n  },\n});\n\nconst ChatContainer = styled(Paper)`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 350px;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n  border-radius: 12px;\n  overflow: hidden;\n  transition: all 0.3s ease;\n  transform: ${props => props.isOpen ? 'translateY(0)' : 'translateY(calc(100% - 60px))'};\n`;\n\nconst ChatHeader = styled(Box)`\n  background-color: #4A4A4A;\n  color: white;\n  padding: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ChatMessages = styled(Box)`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  background-color: #f5f5f5;\n`;\n\nconst MessageBubble = styled(Box)`\n  max-width: 80%;\n  margin: 8px 0;\n  padding: 12px;\n  border-radius: 12px;\n  ${props => props.isUser ? `\n    background-color: #4A4A4A;\n    color: white;\n    margin-left: auto;\n  ` : `\n    background-color: white;\n    color: #4A4A4A;\n    margin-right: auto;\n  `}\n`;\n\nconst ChatInput = styled(Box)`\n  padding: 16px;\n  background-color: white;\n  border-top: 1px solid #e0e0e0;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst ChatButton = styled(IconButton)`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background-color: #4A4A4A !important;\n  color: white !important;\n  &:hover {\n    background-color: #333333 !important;\n  }\n`;\n\nconst openai = new OpenAI({\n  apiKey: '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',\n  dangerouslyAllowBrowser: true\n});\n\nfunction App() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([\n    {\n      text: \"Hej! Jag är 1753 Skincare's AI-assistent. Jag kan hjälpa dig med frågor om hudvård och hudhälsa. Hur kan jag hjälpa dig idag?\",\n      isUser: false\n    }\n  ]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { text: input, isUser: true };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n\n    try {\n      const response = await openai.chat.completions.create({\n        model: \"gpt-4\",\n        messages: [\n          {\n            role: \"system\",\n            content: \"Du är en expert på hudvård och hudhälsa med fokus på holistisk hälsa. Du ska endast svara på frågor relaterade till hudvård, hudhälsa och relaterade ämnen. För alla andra frågor, hänvisa till christopher@1753skincare.com\"\n          },\n          {\n            role: \"user\",\n            content: input\n          }\n        ],\n        temperature: 0.7,\n        max_tokens: 500\n      });\n\n      const botMessage = {\n        text: response.choices[0].message.content,\n        isUser: false\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        text: \"Tyvärr kunde jag inte processa din fråga just nu. Vänligen försök igen eller kontakta christopher@1753skincare.com\",\n        isUser: false\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ChatButton onClick={() => setIsOpen(!isOpen)}>\n        <ChatIcon />\n      </ChatButton>\n      \n      <ChatContainer isOpen={isOpen}>\n        <ChatHeader>\n          <Typography variant=\"h6\">1753 Skincare Assistant</Typography>\n          <IconButton onClick={() => setIsOpen(false)} sx={{ color: 'white' }}>\n            <ChatIcon />\n          </IconButton>\n        </ChatHeader>\n        \n        <ChatMessages>\n          {messages.map((message, index) => (\n            <MessageBubble key={index} isUser={message.isUser}>\n              <Typography>{message.text}</Typography>\n            </MessageBubble>\n          ))}\n          <div ref={messagesEndRef} />\n        </ChatMessages>\n        \n        <ChatInput>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"Skriv ditt meddelande...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n            size=\"small\"\n          />\n          <IconButton color=\"primary\" onClick={handleSend}>\n            <SendIcon />\n          </IconButton>\n        </ChatInput>\n      </ChatContainer>\n    </ThemeProvider>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}